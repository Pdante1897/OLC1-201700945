/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.bryan.ui;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.security.Principal;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import proyecto.analizadores.*;
import proyecto.estructuras.*;
import proyecto.main.*;

/**
 *
 * @author gerar
 */
public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    
    public boolean lenguaje= false; // false significa que traducira a golang, true significa que traducira a python
    public principal() {
        initComponents();
        if (lenguaje) {
                System.out.println("Traduccion a Python");
                jToggleButton1.setText("Python");
                jTextArea2.setText("Python");
            }else{
                System.out.println("Traduccion a Golang");
                jToggleButton1.setText("Golang");
                jTextArea2.setText("Golang");

            }
        NombreV(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setText("Golang\n");
        jTextArea2.setDisabledTextColor(new java.awt.Color(153, 153, 150));
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("jToggleButton1");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jToggleButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));

        jMenu1.setBackground(new java.awt.Color(153, 153, 153));
        jMenu1.setText("Archivo");

        jMenuItem2.setText("Abrir archivo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Guardar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setText("Guardar como");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(153, 153, 153));
        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Reportes");

        jMenuItem5.setText("Arbol AST");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Diagrama de Flujo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setText(null);
        jTextArea2.setText("Golang");
        //jTextArea3.setText("Python");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    public static File archivoAct;
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try{
            if (archivoAct==null) {
                JFileChooser nuevo= new JFileChooser(System.getProperty("user.dir"));
                nuevo.showSaveDialog(null);
                nuevo.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                File archivoN = nuevo.getSelectedFile();
                guardarArchivo(jTextArea1.getText(), archivoN);
                NombreV(archivoN.getName());
                archivoAct=archivoN;
            }else{
                guardarArchivo(jTextArea1.getText(), archivoAct);
                NombreV(archivoAct.getName());
            }
        }catch(Exception e){
        
        }
        
        
        
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    public void guardarArchivo(String cadena, File archivo){
        FileWriter escribir;
        try {
            archivo.delete();
            escribir = new FileWriter(archivo, true);
            escribir.write(cadena);
            escribir.close();

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar, ingrese nombre al archivo.");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar.");
        }
    }
    
    private void NombreV(String nombre){
        if (nombre==null) {
            this.setTitle("Proyecto1 OLC1 Nuevo");
        }else{
            this.setTitle("Proyecto1 OLC1 "+nombre);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Datos.listaErrores= new ArrayList<int[]>();
        Datos.arbol = new ArbolAST();
        Datos.arbol.raiz = new NodoAST();
        Datos.arbol.raiz.Nodos = new ArrayList<NodoAST>();
        Datos.arbol.raiz.setToken("Global");
        Datos.arbol.raiz.setTipo("Global");
        System.out.println(Datos.arbol.raiz.getToken() + " Raiz del arbol");
        try {
            parser parser = new parser(new Lexico(new StringReader(jTextArea1.getText())));
            parser.parse();
        } catch (Exception ex) {
            //Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }    
        System.out.println("--------------------------------------");
        //System.out.println(Datos.arbol.raiz.Nodos.get(1).getToken());
        //System.out.println(Datos.arbol.raiz.Nodos.get(1).Nodos.get(0).getToken());
        //System.out.println(Datos.arbol.raiz.Nodos.get(1).Nodos.get(0).Nodos.get(1).getToken());
        //System.out.println(Datos.arbol.raiz.Nodos.get(1).Nodos.get(1).Nodos.get(0).getToken());

        System.out.println("--------------------------------------");
        
        System.out.println(Datos.arbol.imprimir_nodo(Datos.arbol.raiz));
        
        if (lenguaje) {
            TraduccionPy traduccion = new TraduccionPy();
            ArrayList<NodoAST> lista= new ArrayList<NodoAST>();
            Datos.arbol.getNodos(Datos.arbol.raiz, lista);
            for (int i = 0; i < lista.size(); i++) {
                System.out.println(lista.get(i).getToken());
            }
            jTextArea2.setText(traduccion.Python(lista));
            for (int i = 0; i < traduccion.importaciones.size(); i++) {
                System.out.println(traduccion.importaciones.get(i));
            }
            for (NodoAST hijos:lista) {
                System.out.println(hijos.getToken());
            }
        }else{
            TraduccionGo traduccion = new TraduccionGo();
            ArrayList<NodoAST> lista= new ArrayList<NodoAST>();
            Datos.arbol.getNodos(Datos.arbol.raiz, lista);
            for (int i = 0; i < lista.size(); i++) {
                System.out.println(lista.get(i).getToken());
            }
            jTextArea2.setText(traduccion.Golang(lista));
            for (int i = 0; i < traduccion.importaciones.size(); i++) {
                System.out.println(traduccion.importaciones.get(i));
            }
            Datos.arbol.setIdNodos(Datos.arbol.raiz);
            System.out.println("aaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            System.out.println(Datos.arbol.imprimir_nodo(Datos.arbol.raiz));
            System.out.println("aaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            generarDot("archivo");
            try {
                crearCmd("archivo", "arbol");
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        ArchivoError ArchivoError = new ArchivoError(jTextArea1.getText());
        ArchivoError.generarCadena(Datos.listaErrores);
        if (!Datos.listaErrores.isEmpty()) {
            generarArchivoErrores ("errores",ArchivoError.getCadenaResultante());
        }
        Diagrama diagrama = new Diagrama();
        generarDotDiagrama("diagramaFlujo",diagrama.cadena(Datos.listaInstrucciones));
        try {
            crearCmd("diagramaFlujo", "diagramaFlujo");
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void generarArchivoErrores(String nombre, String contenido){
        FileWriter archivo = null;
        PrintWriter pw = null;
        String dir = "./src/Files/" + nombre + ".txt";
        try {
            archivo = new FileWriter(dir);
            pw = new PrintWriter(archivo);
            pw.println(contenido);
            


        } catch (Exception e) {
            System.out.println("error, no se realizo el archivo");
        } finally {
            try {
                if (null != archivo) {
                    archivo.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        
        try {
            File path = new File (dir);
            Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    
    public void generarDot(String nombre){
        FileWriter archivo = null;
        PrintWriter pw = null;
        try {
            archivo = new FileWriter("./src/Files/" + nombre + ".dot");
            pw = new PrintWriter(archivo);
            pw.println("digraph G{");
            pw.println("node[shape=\"box\" shape=\"record\"]");
            pw.println(Datos.arbol.recorrido(Datos.arbol.raiz));
            pw.println("}");


        } catch (Exception e) {
            System.out.println("error, no se realizo el archivo");
        } finally {
            try {
                if (null != archivo) {
                    archivo.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }
    public void generarDotDiagrama(String nombre, String cadena){
        FileWriter archivo = null;
        PrintWriter pw = null;
        try {
            archivo = new FileWriter("./src/Files/" + nombre + ".dot");
            pw = new PrintWriter(archivo);
            pw.println(cadena);


        } catch (Exception e) {
            System.out.println("error, no se realizo el archivo");
        } finally {
            try {
                if (null != archivo) {
                    archivo.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }
    
    public void crearCmd(String nombre, String nombre1) throws FileNotFoundException, IOException{
        String dir=System.getProperty("user.dir")+"/src/Files";
        dir.replace('/', '\\');
        String variable="cd c:\\program files\\graphviz\\bin\n  ";
        String variable2="dot -Tsvg \""+dir+"\\"+nombre+".dot\" -o \""+dir+"\\"+nombre1+".svg\"\n  ";        
        try
        {
            PrintWriter comando;
            FileWriter archivo = new FileWriter("./src/Files/comando"+nombre+".cmd");
            comando = new PrintWriter(archivo);
            comando.println(variable);
            comando.println(variable2);
            comando.println("exit");
            comando.close();
            
            Runtime rt=Runtime.getRuntime();
            rt.exec("cmd /c start "+dir+"\\comando"+nombre+".cmd");
            
        }catch(IOException e)
        {
            
        }
    }
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (rootPaneCheckingEnabled) {
            lenguaje=!lenguaje;
            if (lenguaje) {
                System.out.println("Traduccion a Python");
                jToggleButton1.setText("Python");
                jTextArea2.setText("Python");

            }else{
                System.out.println("Traduccion a Golang");
                jToggleButton1.setText("Golang");
                jTextArea2.setText("Golang");

            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        String dir=System.getProperty("user.dir")+"/src/Files/arbol.svg";    
        try {
            File path = new File (dir);
            Desktop.getDesktop().open(path);
        }catch (IOException ex) {
            ex.printStackTrace();
        }
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try{
            JFileChooser cargar= new JFileChooser(System.getProperty("user.dir"));
            cargar.showOpenDialog(cargar);
            cargar.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            File archivoC = cargar.getSelectedFile();
            FileReader read = new FileReader(archivoC);
            BufferedReader bufferR = new BufferedReader(read);
            String cadena="";
            while ((bufferR.ready())){
                cadena+=bufferR.readLine()+"\n";             
            }                
            jTextArea1.setText(cadena);
            System.out.println(archivoC.getName());
            archivoAct=archivoC;
            NombreV(archivoC.getName());
        }catch(Exception e){
        
        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try{
            JFileChooser nuevo= new JFileChooser(System.getProperty("user.dir"));
            nuevo.showSaveDialog(null);
            nuevo.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            File archivoN = nuevo.getSelectedFile();
            guardarArchivo(jTextArea1.getText(), archivoN);
            NombreV(archivoN.getName());
            archivoAct=archivoN;
        }catch(Exception e){
        
        }
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        String dir=System.getProperty("user.dir")+"/src/Files/diagramaFlujo.svg";    
        try {
            File path = new File (dir);
            Desktop.getDesktop().open(path);
        }catch (IOException ex) { 
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
