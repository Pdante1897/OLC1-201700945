inicio 
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _indice2_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	_nombreesta_ -> 1+1;
	_esta_ -> -_nombredeesta_+_esta_;
fin


inicio 
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _indice2_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	_nombreesta_ -> 1+1;
	_esta_ -> -_nombredeesta_+_esta_;
	
	imprimir "holamundo";
	imprimir_nl 2 potencia [5+5];
	si _x_ mayor 1 entonces
		_nombreesta_ -> 1+1;
		_nombreesta_ -> 1+2;
		_nombreesta_ -> 1+23;
		_nombreesta_ -> 1+24;
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;

		fin_si
	o_si _z_ es_igual 0 entonces
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;

		fin_si
	de_lo_contrario
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;

		fin_si
	fin_si
fin


inicio 
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _indice2_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	_nombreesta_ -> 1+1;
	_esta_ -> -_nombredeesta_+_esta_;
	

	si _x_ mayor 1 entonces
		_nombreesta_ -> 1+1;
		_nombreesta_ -> 1+2;
		_nombreesta_ -> 1+23;
		_nombreesta_ -> 1+24;
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;

		fin_si

	fin_si
fin


inicio 
	ingresar _esta_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _esta_ como numero con_valor 11.23;
	ingresar _esta_ como numero con_valor 11523;
	_esta_ -> 1+1;
	_esta_, _esta2_ -> 123+33*1;
	_esta_, _otra_, _estaesotra_ -> 1+1+3+8;

fin

inicio 
	ingresar _esta_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	ingresar _nombredeesta_, _otro_, _aver_ como boolean con_valor verdadero;
	ingresar _esta_ como numero con_valor 11.23;
	ingresar _esta_ como numero con_valor 11523;

fin

inicio 
	imprimir "hola mundo";
	_esta_ -> 1+1;
fin


inicio 
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _indice2_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	_nombreesta_ -> 1+1;
	_esta_ -> -_nombredeesta_+_esta_;
	

	si _x_ mayor 1 entonces
		_nombreesta_ -> 1+1;
	o_si _x_ menor 1 entonces
		_nombreesta_ -> 1+2;
	de_lo_contrario
		_nombreesta_ -> 1+3;
	fin_si

	segun _A_ hacer
		¿ "<valor 1>" ? entonces
			_B_->"valoor 1111";
		¿ "<valor 2>" ? entonces
			_B_->"valoooor 2";
		¿ "<valor 3>" ? entonces
			_B_->"valor   3";
		de_lo_contrario entonces	
			_B_->"holamundo";
	fin_segun
fin


inicio
	para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
	fin_para
fin

inicio
	mientras _x_ mayor 5 hacer
		imprimir "holamundo";
	fin_mientras
fin

inicio
	repetir 
		imprimir "holamundo";
	hasta_que _x_ mayor 5
		
fin

inicio
	ejecutar _ESTA_();
		
fin

metodo _esteMetodo_
		para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
		imprimir "holamundo2";
		imprimir "holamundo3";

		fin_para
fin_metodo


inicio
	ejecutar _ESTA_(1, 2, "holamundo", verdadero);
	ejecutar _ESTA_();

fin

metodo _esteMetodo_ con_parametros (_A_ cadena, _numero_ numero, _otro_ boolean)
		para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
		imprimir "holamundo2";
		imprimir "holamundo3";

		fin_para
		retornar 1;
fin_metodo

metodo _esteMetodo_ con_parametros (_A_ cadena, _numero_ numero, _otro_ boolean)
		para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
		imprimir "holamundo2";
		imprimir "holamundo3";

		fin_para
		retornar 1;
fin_metodo

funcion _esteMetodo_ numero 
		para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
		imprimir "holamundo2";
		imprimir "holamundo3";

		fin_para
		retornar 1;
fin_funcion


funcion _esteMetodo_ numero con_parametros (_A_ cadena, _numero_ numero, _otro_ boolean)
		para _A_ -> 0 hasta 10 hacer
		imprimir "holamundo";
		imprimir "holamundo2";
		imprimir "holamundo3";

		fin_para
		retornar 1;
fin_funcion


inicio 
	ingresar _nombredeesta_, _otro_, _aver_ como cadena con_valor "esta cosa";
	ingresar _indice2_ como cadena con_valor "esta cosa";
	ingresar _esta_ como cadena con_valor "esta cosa";
	ingresar _flotante_ como numero con_valor 3 potencia[55];
	_nombreesta1_,_variable2_,_variable3_ -> 1+1;
	_esta1_ -> _nombredeesta2_+_esta3_;
	_otra_-> 56;
	_flotante_ -> 3 potencia[55];
	_flotante2_ -> (1+3) + (2+5+10+22 )potencia [_X_] * 13 + (2+3*5*7) potencia[13/5+6*2];
	imprimir "holamundo";
	imprimir (1+3) + (2+5+10+22 )potencia [_X_] * 13 + (2+3*5*7) potencia[13/5+6*2];
	
	segun _A_ hacer
		¿ "<valor 1>" ? entonces
			_B_->"valoor 1111";
		¿ "<valor 2>" ? entonces
			_B_->"valoooor 2";
		¿ "<valor 3>" ? entonces
			_B_->"valor   3";
		de_lo_contrario entonces	
			_B_->"holamundo";
	fin_segun

	si _x_ mayor 1 entonces
		_nombreesta_ -> 1+1;
		_nombreesta_ -> 1+2;
		_nombreesta_ -> 1+23;
		_nombreesta_ -> 1+24;
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;

		fin_si
	o_si _z_ es_igual 0 entonces
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;
			_flotante2_ -> (1+3) + (2+5+10+22 )potencia [_X_] * 13 + (2+3*5*7) potencia[13/5+6*2];

		fin_si
	de_lo_contrario
		si (_x_ mayor 1) and (_y_ menor 2) entonces
			_nombreesta_ -> 1+1;
			_nombreesta_ -> 1+2;
			_nombreesta_ -> 1+23;
			_nombreesta_ -> 1+24;
			segun _A_ hacer
				¿ "<valor 1>" ? entonces
					_B_->"valoor 1111";
				¿ "<valor 2>" ? entonces
					_B_->"valoooor 2";
				¿ "<valor 3>" ? entonces
					_B_->"valor   3";
				de_lo_contrario entonces	
					_B_->"holamundo";
					_flotante2_ -> (1+3) + (2+5+10+22 )potencia [_X_] * 13 + (2+3*5*7) potencia[13/5+6*2];
			fin_segun

		fin_si
	fin_si
fin



inicio
/////inicio de la traduccion

ingresar _variable1_ como Numero con_valor 5;
ingresar _v1_, _v2_, _v3_ como Cadena con_valor  "esta es una cadena";

_v1_ -> "esta es la cadena numero 1";
_v2_, _v3_ -> "estas cadenas deben ser diferentes";

imprimir_nl (_v3_);

si _v1_ es_igual _v2_ entonces
	imprimir_nl "Al parecer no funciona la asignacion";
	mientras not _variable1_ mayor_o_igual 5*5+8/2 hacer
		imprimir _variable1_;
		_variable1_ -> _variable1_ + 1;
	fin_mientras
fin_si


ingresar _varB_ como Boolean con_valor falso; //tomar como "falso" o "verdadero" los valores booleanos

si _varB_ entonces
	imprimir_nl "Estas definiendo bien los valores";
	ingresar _varaux_ como Numero con_valor _variable1_ mod 2;
	segun _varaux_ hacer
		¿0? entonces
			imprimir "el valor es mayor a 0 y menos a 2";
		¿2? entonces
			imprimir "el valor es mayor a 2";
	fin_segun
fin_si

ejecutar _metodo_1_();

/*Ahora empezamos con las funciones y procedimientos*/

metodo _potenciaManual_ con_parametros (_base_ Numero, _exponenete_ Numero)
	ingresar _i_ como Numero con_valor 0;
	ingresar _acumulado_ como Numero con_valor 0;
	para _i_->0 hasta 1 hacer
		_acumulado_ -> _acumulado_ + _acumulado_;
	fin_para	
	imprimir _acumulado_;
	imprimir_nl " Esta es la potencia Manual";	
fin_metodo

funcion _potenciaFuncion_ Numero con_parametros (_base_ Numero, _exponente_ Numero) 
	ingresar _potencia_ como Numero con_valor _base_ potencia[ _exponente_];
	retornar _potencia_;
fin_funcion

metodo _metodo_1_
	imprimir_nl "estamos entrando al metodo 1";	
	ejecutar _potenciaManual_(3*1+4/2, 3+2);

	imprimir_nl " Esta es la potencia Funcion";
fin_metodo

fin